
package webservice;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150616.1732
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "SessionEJB1BeanService", targetNamespace = "http://webservice/",
                  wsdlLocation =
                  "http://localhost:7101/demo_0002-WebService-webapp/SessionEJB1BeanService?WSDL#%7Bhttp%3A%2F%2Fwebservice%2F%7DSessionEJB1BeanService")
public class SessionEJB1BeanService extends Service {

    private final static URL SESSIONEJB1BEANSERVICE_WSDL_LOCATION;
    private final static WebServiceException SESSIONEJB1BEANSERVICE_EXCEPTION;
    private final static QName SESSIONEJB1BEANSERVICE_QNAME = new QName("http://webservice/", "SessionEJB1BeanService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url =
                new URL("http://localhost:7101/demo_0002-WebService-webapp/SessionEJB1BeanService?WSDL#%7Bhttp%3A%2F%2Fwebservice%2F%7DSessionEJB1BeanService");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SESSIONEJB1BEANSERVICE_WSDL_LOCATION = url;
        SESSIONEJB1BEANSERVICE_EXCEPTION = e;
    }

    public SessionEJB1BeanService() {
        super(__getWsdlLocation(), SESSIONEJB1BEANSERVICE_QNAME);
    }

    public SessionEJB1BeanService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SESSIONEJB1BEANSERVICE_QNAME, features);
    }

    public SessionEJB1BeanService(URL wsdlLocation) {
        super(wsdlLocation, SESSIONEJB1BEANSERVICE_QNAME);
    }

    public SessionEJB1BeanService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SESSIONEJB1BEANSERVICE_QNAME, features);
    }

    public SessionEJB1BeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SessionEJB1BeanService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns SessionEJB1Bean
     */
    @WebEndpoint(name = "SessionEJB1BeanPort")
    public SessionEJB1Bean getSessionEJB1BeanPort() {
        return super.getPort(new QName("http://webservice/", "SessionEJB1BeanPort"), SessionEJB1Bean.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SessionEJB1Bean
     */
    @WebEndpoint(name = "SessionEJB1BeanPort")
    public SessionEJB1Bean getSessionEJB1BeanPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice/", "SessionEJB1BeanPort"), SessionEJB1Bean.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SESSIONEJB1BEANSERVICE_EXCEPTION != null) {
            throw SESSIONEJB1BEANSERVICE_EXCEPTION;
        }
        return SESSIONEJB1BEANSERVICE_WSDL_LOCATION;
    }

}
